
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.JTextArea;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author intel
 */
public class JMAINFRAME extends javax.swing.JFrame {
    private Timer timer;
    private int timeRemaining = 15 * 60;
private Object data;

    /**
     * Creates new form JMAINFRAME
     */
    public JMAINFRAME() {
        initComponents();
        showDate();
        showTime();
        startTimer();
       subject.setSelectedItem(null);
       
    }
    
    
    public Object getData() {
        return data;
    }
   
    public void showDate(){
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("MM-dd-yyyy");
        String dat = s.format(d);
        Date.setText(dat);
    } 
    
     public void showTime() {
        Timer t;
        SimpleDateFormat st = new SimpleDateFormat("hh:mm:ss a");

        t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                String T = st.format(d);
                
                times.setText(T);
            }
        });
        t.start();
}
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        StudentID = new javax.swing.JTextField();
        LoginID = new javax.swing.JButton();
        CancelID = new javax.swing.JButton();
        AdminLogin = new javax.swing.JButton();
        Date = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        times = new javax.swing.JLabel();
        subject = new javax.swing.JComboBox<>();
        timeselect = new javax.swing.JComboBox<>();
        instructor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Class Attendance");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Student ID:");

        StudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentIDActionPerformed(evt);
            }
        });

        LoginID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        LoginID.setText("Login");
        LoginID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginIDActionPerformed(evt);
            }
        });

        CancelID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CancelID.setText("Cancel");
        CancelID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelIDActionPerformed(evt);
            }
        });

        AdminLogin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AdminLogin.setText("Admin Login");
        AdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminLoginActionPerformed(evt);
            }
        });

        Date.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Date.setText("Date");

        Time.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Time.setText("Time");

        times.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        times.setText("Time");

        subject.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fundamentals of Programming", "Platform Technologies", "Human Computer Interaction", "Quantitative Methods", "PATH - FIT 2", "Personality Development", "NSTP - CWTS 2", "Philippine History" }));
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });

        timeselect.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        timeselect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        timeselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeselectActionPerformed(evt);
            }
        });

        instructor.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        instructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Subject:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Time:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Instructor:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("in Section C");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(AdminLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginID)
                .addGap(18, 18, 18)
                .addComponent(CancelID)
                .addGap(46, 46, 46))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Time)
                    .addComponent(Date)
                    .addComponent(times))
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(155, 155, 155))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(StudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(Date)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(times)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Time)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeselect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AdminLogin)
                    .addComponent(CancelID)
                    .addComponent(LoginID))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(771, 511));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AdminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminLoginActionPerformed
        // TODO add your handling code here:

        AdminFrame admin = new AdminFrame();
        admin.pack();
        admin.setLocationRelativeTo(null);

        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AdminLoginActionPerformed

    private void CancelIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelIDActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CancelIDActionPerformed

    private void LoginIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginIDActionPerformed
        // TODO add your handling code here:

        String studentID = StudentID.getText();
     
        switch (studentID) {

            case "20231900":
            showStudentDetails("Anticamara, James Florence F. ", "20", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231834":
            showStudentDetails("Avanceña, Raymart B. ", "24", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231641":
            showStudentDetails("Ayson, Jayce Rae E. ", "18", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231287":
            showStudentDetails("Bernales, Rainiel Jevson ", "18", "Sankanan Manolo Fortich Bukidnon");
            break;
            case "20221545":
            showStudentDetails("Bonifacio, Tristan O. ", "20", "Alae Manolo Fortich Bukidnon");
            break;
            case "20232040":
            showStudentDetails("Cabrera, Jose Maria P. ", "20", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231836":
            showStudentDetails("Cabugao, Charl A. ", "19", "San miguel Manolo Fortich Bukidnon");
            break;
            case "20231632":
            showStudentDetails("Cañete, Anthony C. ", "18", "Damilag Manolo Fortich Bukidnon");
            break;
            case "20231220":
            showStudentDetails("Catingan, Jane Justine T. ", "18", "Lunocan Manolo Fortich Bukidnon");
            break;
            case "20231053":
            showStudentDetails("Coming, Katelyn L. ", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231052":
            showStudentDetails("Coming, Pauline May ", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231540":
            showStudentDetails("Dimatao, Dexter P. ", "19", "Poblacion Sumilao Bukidnon");
            break;
            case "20231298":
            showStudentDetails("Donque, John Lloyd ", "18", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231811":
            showStudentDetails("Ellevera, Oscar Jay ", "19", "Alae Manolo Fortich Bukidnon");
            break;
            case "20231658":
            showStudentDetails("Eviota, Joshua B. ", "21", "Alae Manolo Fortich Bukidnon");
            break;
            case "20231231":
            showStudentDetails("Gabitano, Samantha L. ", "18", "Sankanan Manolo Fortich Bukidnon");
            break;
            case "20231652":
            showStudentDetails("Gamolo, Kenneth B.  ", "18", "Maluko Manolo Fortich Bukidnon");
            break;         
            case ("20231698"): 
            showStudentDetails("Grave, Ken Jay", "20", "Maluko Manolo Fortich Bukidnon");
            break;
            case "20231685":
            showStudentDetails("Idul, Francis Adrian ", "18", "Damilag Manolo Fortich Bukidnon");
            break;
            case "20232051":
            showStudentDetails("Igcalinos, Christian Dirk Axel ", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231704":
            showStudentDetails("Javier, Davram A. ", "19 ", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231294":
            showStudentDetails("Liloan, Hiether Fhiona ", "18", "Sankanan Manolo Fortich Bukidnon");
            break;
            case "20231035":
            showStudentDetails("Lopez, Kristine L. ", "19", "San Miguel Manolo Fortich Bukidnon");
            break;
            case "20221869":
            showStudentDetails("Lozada, Earl Lourenz S. ", "19", "San Miguel Manolo Fortich Bukidnon");
            break;
            case "20231835":
            showStudentDetails("Magdura, Roland  ", "24", "Sankanan Manolo Fortich Bukidnon");
            break;
            case "20231199":
            showStudentDetails("Mancanwan, Scarlett  ", "19", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231300":
            showStudentDetails("Manginsay, Auggie John Fres G. ", "18", "Lingion Manolo Fortich Bukidnon");
            break;
            case "20232091":
            showStudentDetails("Manuel, Ron Andre S.", "20", "San Miguel Manolo Fortich Bukidnon");
            break;
            case "20231818":
            showStudentDetails("Mat-ao, Ma. Sophia Bianca", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231012":
            showStudentDetails("Medado, Zyra Sham E. ", "19", "Laturan Libona Bukidnon");
            break;
            case "20201337":
            showStudentDetails("Mijares, Francis E. ", "22", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231611":
            showStudentDetails("Montimar, James berth ", "19", "Damilag Manolo Fortich Bukidnon");
            break;
            case "20231151":
            showStudentDetails("Octat, Mark Jovan ", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231016":
            showStudentDetails("Pagongpong, Kent Ryan ", "19", "Pongol Libona Bukidnon");
            break;
            case "20231969":
            showStudentDetails("Perejan, Sander ", "20", "Camp Philips Manolo Fortich Bukidnon");
            break;
            case "20231493":
            showStudentDetails("Ranario, Peter R. ", "19", "Kisolon Sumilao Bukidnon");
            break;
            case "20231993":
            showStudentDetails("Ranin, Jacob Israel A. ", "20", "San Miguel Manolo Fortich Bukidnon");
            break;
            case "20231672":
            showStudentDetails("Salalima, Kien S. ", "19", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231914":
            showStudentDetails("Saldivar, Evelyn Nalla ", "18", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20232044":
            showStudentDetails("Salinas, Charity P. ", "19", "Alae Manolo Fortich Bukidnon");
            break;
            case "20231293":
            showStudentDetails("Salvo, Alliah Shane R. ", "19", "Sankanan Manolo Fortich Bukidnon");
            break;
            case "20201014":
            showStudentDetails("Salvo, Joemaila Linn F. ", "25", "Tankulan Manolo Fortich Bukidnon");
            break;
            case "20231667":
            showStudentDetails("Sanico, Christian Rey  ", "19", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231088":
            showStudentDetails("Sarilla, Lovella T. ", "20", "Ocasion Sumilao Bukidnon");
            break;
            case "20231250":
            showStudentDetails("Satina, Trisha Ann ", "19", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231434":
            showStudentDetails("Sigongan, Irish Mae ", "18", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231699":
            showStudentDetails("Subesa, Lylle Andrei ", "19", "Alae Manolo Fortich Bukidnon");
            break;
            case "20231219":
            showStudentDetails("Sugdan, Mon Jernay G. ", "21", "Dalirig Manolo Fortich Bukidnon");
            break;
            case "20231490":
            showStudentDetails("Vicariato, Joeroz  ", "19", "Lunocan Manolo Fortich Bukidnon");
            break;

            default:
            JOptionPane.showMessageDialog(null, "No student ID found", "MESSAGE", JOptionPane.ERROR_MESSAGE);
            break;
        }
    
}
public void showStudentDetails(String names, String age, String address) {
    int choice = JOptionPane.showConfirmDialog(null, "Name: " + names + "\n" +
            "Age: " + age + " years old" + "\n" +
            "Address: " + address + "\n" +
            "Course: Bachelor of Science in Information Technology" + "\n" +
            "Year level: 1st Year", "Student Details", JOptionPane.YES_NO_OPTION);

    if (choice == JOptionPane.YES_OPTION) {
        String studentID = StudentID.getText();
        String selectedSubject = subject.getSelectedItem().toString(); 
        writeSubjectToFile(selectedSubject, studentID, names);
        JOptionPane.showMessageDialog(null, "Success!");
        
        StudentID.setText(""); 
    } else {
        this.toBack(); 
    }
}
private String getCurrentTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy hh:mm:ss a");
    return sdf.format(new Date());
}

private void writeSubjectToFile(String selectedSubject, String studentID, String names) {
    String fileName = "subject.txt";
    String platformFileName = "Platform.txt";
    String hciFileName = "HCI.txt";
    String loginTime = getCurrentTime();

    try {
        FileWriter writer = new FileWriter(fileName, true);
        if (selectedSubject.equals("Fundamentals of Programming")) {
            writer.write(studentID + "      " + names + "    " + loginTime + System.lineSeparator());
            
            if ("20231900".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Anticamara, James Florence F.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231834".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Avanceña, Raymart B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231641".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ayson, Jayce Rae E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231287".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Bernales, Rainiel Jevson")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20221545".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Bonifacio, Tristan  O.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232040".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cabrera, Jose Maria P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231836".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cabugao, Charl A.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231632".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cañete, Anthony C.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231220".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Catingan, Jane  Justine T.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231053".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Coming, Katelyn  L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231052".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Coming, Pauline May")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231540".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Dimatao, Dexter P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231298".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Donque, John Lloyd")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231811".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ellevera, Oscar Jay")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231658".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Eviota, Joshua B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231231".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Gabitano, Samantha L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231652".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Gamolo, Kenneth B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231698".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Grave, Ken Jay P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231685".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Idul, Francis Adrian")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232051".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Igcalinos, Christian Dirk Axel S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231704".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Javier, Davram A.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231294".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Liloan, Hiether Fhiona")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231294".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Lopez, Kristine L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20221869".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Lozada, Earl Lourenz S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231835".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Magdura, Roland")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231199".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mancawan, Scarlett")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231300".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Manginsay, Auggie John Fres G.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20232091".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Manuel, Ron Andre")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231818".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mat-ao, Ma. Sophia Bianca")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231012".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Medado, Zyra Sham E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
             
              if ("20201337".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mijares, Francis E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
             
            if ("20231611".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Montimar, James  Berth")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } 
             
            if ("20231151".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Octat, Mark Jovan")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } 
            
            if ("20231016".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Pagongpong, Kent Ryan")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }   
              
            if ("20231969".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Perejan, Sander")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }     
              
            if ("20231493".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ranario, Peter Cruz")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }       
              
            if ("20231993".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ranin, Jacob Israel A. Jr.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }         
              
             if ("20231672".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salalima, Kien S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }          
              
            if ("20231914".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Saldivar, Evelyn Nalla")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232044".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salinas, Charity P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231293".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salvo, Alliah Shane R.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20201014".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salvo, Joemaila Linn F.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231667".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sanico, Christian Rey B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231088".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sarilla, Lovella T.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231250".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Satina, Trisha Ann")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231434".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sigongan, Irish Mae")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231699".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Subesa, Lylle Andrei")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231219".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sugdan, Mon Vernan G.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231490".equals(studentID)) {
                File inputFile = new File("student_names.txt");
                File tempFile = new File("tempFile.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Vicariato, Joeroz")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }        
        }
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }

    try {
        FileWriter writer = new FileWriter(platformFileName, true);
        if (selectedSubject.equals("Platform Technologies")) {
            writer.write(studentID + "       " + names + "     " + loginTime + System.lineSeparator());
            
            if ("20231900".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Anticamara, James Florence F.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231834".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Avanceña, Raymart B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231641".equals(studentID)) {
                 File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ayson, Jayce Rae E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231287".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Bernales, Rainiel Jevson")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20221545".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Bonifacio, Tristan  O.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232040".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cabrera, Jose Maria P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231836".equals(studentID)) {
               File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cabugao, Charl A.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231632".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Cañete, Anthony C.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231220".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Catingan, Jane  Justine T.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231053".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Coming, Katelyn  L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231052".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Coming, Pauline May")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231540".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Dimatao, Dexter P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231298".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Donque, John Lloyd")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231811".equals(studentID)) {
                 File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ellevera, Oscar Jay")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231658".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Eviota, Joshua B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231231".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Gabitano, Samantha L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231652".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");
                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Gamolo, Kenneth B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231698".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Grave, Ken Jay P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231685".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Idul, Francis Adrian")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232051".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Igcalinos, Christian Dirk Axel S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231704".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Javier, Davram A.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231294".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Liloan, Hiether Fhiona")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231294".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");
                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Lopez, Kristine L.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20221869".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Lozada, Earl Lourenz S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231835".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Magdura, Roland")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231199".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mancawan, Scarlett")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231300".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Manginsay, Auggie John Fres G.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20232091".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Manuel, Ron Andre")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231818".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mat-ao, Ma. Sophia Bianca")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231012".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Medado, Zyra Sham E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
             
              if ("20201337".equals(studentID)) {
               File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Mijares, Francis E.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
             
            if ("20231611".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Montimar, James  Berth")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } 
             
            if ("20231151".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Octat, Mark Jovan")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } 
            
            if ("20231016".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Pagongpong, Kent Ryan")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }   
              
            if ("20231969".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Perejan, Sander")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }     
              
            if ("20231493".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ranario, Peter Cruz")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }       
              
            if ("20231993".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Ranin, Jacob Israel A. Jr.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }         
              
             if ("20231672".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salalima, Kien S.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }          
              
            if ("20231914".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Saldivar, Evelyn Nalla")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20232044".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salinas, Charity P.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231293".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salvo, Alliah Shane R.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20201014".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");
                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Salvo, Joemaila Linn F.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231667".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sanico, Christian Rey B.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231088".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sarilla, Lovella T.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231250".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Satina, Trisha Ann")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231434".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");
                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sigongan, Irish Mae")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
            if ("20231699".equals(studentID)) {
               File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Subesa, Lylle Andrei")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if ("20231219".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Sugdan, Mon Vernan G.")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            
             if ("20231490".equals(studentID)) {
                File inputFile = new File("Platform.txt");
                File tempFile = new File("PlatformAbsent.txt");

                try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
                     PrintWriter tempWriter = new PrintWriter(new FileWriter(tempFile))) {

                    String line;
                    while ((line = reader.readLine()) != null) {
                        if (!line.contains("Vicariato, Joeroz")) {
                            tempWriter.println(line.trim());
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }        
            
        }
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }

    try {
        FileWriter writer = new FileWriter(hciFileName, true);
        if (selectedSubject.equals("Human Computer Interaction")) {
            writer.write(studentID + "       " + names + "      " + loginTime + System.lineSeparator());
        }
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }

    subject.setSelectedIndex(-1);
    timeselect.setSelectedIndex(-1);
    instructor.setSelectedIndex(-1);
    }//GEN-LAST:event_LoginIDActionPerformed
   
    private void StudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentIDActionPerformed

    }//GEN-LAST:event_StudentIDActionPerformed
  
    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
  try {
        Object selectedItem = subject.getSelectedItem();
        if (selectedItem == null) {
            
            return;
        }

        String selectedSubject = selectedItem.toString();

        if (selectedSubject.equals("Fundamentals of Programming")) {
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("1:00PM - 2:30PM");
            timeselect.addItem("2:30PM - 4:00PM");
            instructor.addItem("Cristine Joy Sagaosao");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        } 
        else if (selectedSubject.equals("Platform Technologies")) {
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("1:00PM - 2:30PM");         
            instructor.addItem("Charlene Bulahan-Undag");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        }
        else if (selectedSubject.equals("Human Computer Interaction")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("7:00AM - 9:00AM");
            timeselect.addItem("10:30AM - 12:00AM");
            instructor.addItem("Jesu Bernaldez");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        }
        else if (selectedSubject.equals("Quantitative Methods")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("4:00PM - 5:30PM");           
            instructor.addItem("Shiela Mae Orozco");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        } 
        else if (selectedSubject.equals("PATH - FIT 2")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("3:00PM - 5:00PM");           
            instructor.addItem("Milleanne Kaye Remotigue");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        } 
        else if (selectedSubject.equals("Personality Development")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("9:00AM - 10:30AM");           
            instructor.addItem("Niemfa Love Manginsay");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        }
        else if (selectedSubject.equals("NSTP - CWTS 2")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("2:30PM - 4:00PM");           
            instructor.addItem("Don Adonis Onahon");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        }
        else if (selectedSubject.equals("Philippine History")){
            timeselect.removeAllItems();
            instructor.removeAllItems();
            timeselect.addItem("9:00AM - 11:00AM");           
            instructor.addItem("Lleomar Japuz");
            timeselect.setSelectedItem(null);
            instructor.setSelectedItem(null);
        } 
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_subjectActionPerformed

    private void timeselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeselectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeselectActionPerformed

    private void instructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instructorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_instructorActionPerformed

   // pagbuhat nlang ug file data para didto ra dayon makita ang data tapos e display nimo ang data didto
   // sa presentframe table 
    
    
    
public void startTimer() {
    timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (timeRemaining > 0) {
                timeRemaining--;
                int minutes = timeRemaining / 60;
                int seconds = timeRemaining % 60;
                String timeString = String.format("%02d:%02d", minutes, seconds);
                Time.setText(timeString);
            } else {
                timer.stop();
                StudentID.setEnabled(false);

               
                String studentID = StudentID.getText();
                String studentName = getStudentName(studentID);

                
                if (!studentID.trim().isEmpty() && studentName.trim().isEmpty()) {
                    try {
                        FileWriter writer = new FileWriter("absent.txt", true);
                        writer.write(" " + studentID + " " + studentName);
                        writer.write(System.getProperty("line.separator"));
                        writer.close();

                        setVisible(false);
                        new JMAINFRAME().setVisible(true);

                    } catch (Exception ex) {
                        ex.printStackTrace(); 
                    }
                }

                JOptionPane.showMessageDialog(null, "Time limit exceeded. You can't log in anymore.");
            }
        }
    });
    timer.start();
}



private String getStudentName(String name) {
    switch (name) {
        case "20231900":
            return "James Florence F. Anticamara";
        case "20231834":
            return "Raymart B. Avanceña";
        case "20231641":
            return "Jayce Rae E. Ayson";
        case "20231287":
            return "Rainiel Jevson Bernales";
          
        case "20221545":
            return"Tristan O. Bonifacio";
                
        case "20232040":
            return"Jose Maria P. Cabrera";
           
        case "20231836":
            return"Charl A. Cabugao";
                
        case "20231632":
            return " Anthony C. Cañete";
             
        case "20231220":
            return"Jane Justine T. Catingan";
        
        case "20231053":
            return "Katelyn L. Coming";
            
        case "20231052":
            return "Pauline May Coming";
             
        case "20231540":
            return"Dexter P. Dimatao";
             
        case "20231298":
            return"John Lloyd Donque";
          
        case "20231811":
            return "Oscar Jay Ellevera";
            
        case "20231658":
            return"Joshua B. Eviota";
            
        case "20231231":
            return"Samantha L. Gabitano";
                
        case "20231652":
            return "Kenneth B. Gamolo ";
            
        case "20231685":
            return "Francis Adrian Idul";
          
         case "20232051":
            return"Christian Dirk Axel Igcalinos";
              
         case "20231704":
            return "Davram A. Javier";
              
         case "20231294":
            return "Hiether Fhiona Liloan";
            
         case "20231035":
            return "Kristine L. Lopez";
              
         case "20221869":
            return"Earl Lourenz S. Lozada";
               
         case "20231835":
            return "Roland Magdura ";
            
         case "20231199":
            return "Scarlett  Mancanwan";
            
         case "20231300":
            return "Auggie John Fres G. Manginsay";
   
        case "20232091":
            return"Ron Andre S Manuel";
              
        case "20231818":
          return"Ma. Sophia Bianca Mat-ao";
                
        case "20231012":
            return "Zyra Sham e. Medado";
               
        case "20201337":
            return "Francis E. Mijares";
     
        case "20231611":
            return "James berth Montimar";
              
        case "20231151":
            return "Mark Jovan Octat";
            
        case "20231016":
            return "Kent Ryan Pagongpong";
               
        case "20231969":
            return"Sander Perejan";
       
         case "20231493":
            return"Peter R. Ranario";
          
         case "20231993":
            return"Jacob Israel A. Ranin";
              
         case "20231672":
            return"Kien S. Salalima";
          
        case "20231914":
            return"Evelyn Nalla Saldivar";
              
        case "20232044":
            return"Charity P. Salinas";
         
        case "20231293":
            return"Alliah Shane R. Salvo";
            
        case "20201014":
            return"Joemaila Linn F. Salvo";
              
        case "20231667":
            return"Christian Rey  Sanico";
      
        case "20231088":
            return" Lovella T. Sarilla";
           
        case "20231250":
            return"Trisha Ann Satina";
  
        case "20231434":
            return "Irish Mae Sigongan";
        
        case "20231699":
            return" Lylle Andrei Subesa";
           
        case "20231219":
            return" Mon Jernay G. Sugdan";
             
        case "20231490":
            return " Joeroz  Vicariato";
       

        default:
            return null;
    }
}

private String getStudentAge(String studentID) {
    switch (studentID) {
       case "20231900":
            return "20";
        case "20231834":
            return "24";
        case "20231641":
            return "18";
        case "20231287":
            return "18";
        case "20221545":
            return "20";
        case "20232040":
            return "20";
        case "20231836":
            return "19";
        case "20231632":
            return "18";
        case "20231220":
            return "18";
        case "20231053":
            return "19";
        case "20231052":
            return "19";
        case "20231540":
            return "19";
        case "20231298":
            return "18";
        case "20231811":
            return "19";
        case "20231658":
            return "21";
        case "20231231":
            return "18";
        case "20231652":
            return "18";
        case "20231685":
            return "18";
        case "20232051":
            return "19";
        case "20231704":
            return "19";
        case "20231294":
            return "18";
        case "20231035":
            return "19";
        case "20221869":
            return "19";
        case "20231835":
            return "24";
        case "20231199":
            return "19";
        case "20231300":
            return "18";
        case "20232091":
            return "20";
        case "20231818":
            return "19";
        case "20231012":
            return "19";
        case "20201337":
            return "22";
        case "20231611":
            return "19";
        case "20231151":
            return "19";
        case "20231016":
            return "19";
        case "20231969":
            return "20";
        case "20231493":
            return "19";
        case "20231993":
            return "20";
        case "20231672":
            return "19";
        case "20231914":
            return "18";
        case "20232044":
            return "19";
        case "20231293":
            return "19";
        case "20201014":
            return "25";
        case "20231667":
            return "19";
        case "20231088":
            return "20";
        case "20231250":
            return "19";
        case "20231434":
            return "18";
        case "20231699":
            return "19";
        case "20231219":
            return "21";
        case "20231490":
            return "19";
        default:
            return null; 
    }
}

private String getStudentAddress(String studentID) {
    switch (studentID) {
        case "20231900":
            return "Tankulan";
        case "20231834":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231641":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231287":
            return "Sankanan Manolo Fortich Bukidnon";
        case "20221545":
            return "Alae Manolo Fortich Bukidnon";
        case "20232040":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231836":
            return "San miguel Manolo Fortich Bukidnon";
        case "20231632":
            return "Damilag Manolo Fortich Bukidnon";
        case "20231220":
            return "Lunocan Manolo Fortich Bukidnon";
        case "20231053":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231052":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231540":
            return "Poblacion Sumilao Bukidnon";
        case "20231298":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231811":
            return "Alae Manolo Fortich Bukidnon";
        case "20231658":
            return "Alae Manolo Fortich Bukidnon";
        case "20231231":
            return "Sankanan Manolo Fortich Bukidnon";
        case "20231652":
            return "Maluko Manolo Fortich Bukidnon";
        case "20231685":
            return "Damilag Manolo Fortich Bukidnon";
        case "20232051":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231704":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231294":
            return "Sankanan Manolo Fortich Bukidnon";
        case "20231035":
            return "San Miguel Manolo Fortich Bukidnon";
        case "20221869":
            return "San Miguel Manolo Fortich Bukidnon";
        case "20231835":
            return "Sankanan Manolo Fortich Bukidnon";
        case "20231199":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231300":
            return "Lingion Manolo Fortich Bukidnon";
        case "20232091":
            return "San Miguel Manolo Fortich Bukidnon";
        case "20231818":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231012":
            return "Laturan Libona Bukidnon";
        case "20201337":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231611":
            return "Damilag Manolo Fortich Bukidnon";
        case "20231151":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231016":
            return "Pongol Libona Bukidnon";
        case "20231969":
            return "Camp Philips Manolo Fortich Bukidnon";
        case "20231493":
            return "Kisolon Sumilao Bukidnon";
        case "20231993":
            return "San Miguel Manolo Fortich Bukidnon";
        case "20231672":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231914":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20232044":
            return "Alae Manolo Fortich Bukidnon";
        case "20231293":
            return "Sankanan Manolo Fortich Bukidnon";
        case "20201014":
            return "Tankulan Manolo Fortich Bukidnon";
        case "20231667":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231088":
            return "Ocasion Sumilao Bukidnon";
        case "20231250":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231434":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231699":
            return "Alae Manolo Fortich Bukidnon";
        case "20231219":
            return "Dalirig Manolo Fortich Bukidnon";
        case "20231490":
            return "Lunocan Manolo Fortich Bukidnon";
        default:
            return null; 
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JMAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JMAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JMAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JMAINFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JMAINFRAME().setVisible(true);
               
            }
    private javax.swing.JLabel Time;
    private javax.swing.JButton absent;
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdminLogin;
    private javax.swing.JButton CancelID;
    private javax.swing.JLabel Date;
    private javax.swing.JButton LoginID;
    private javax.swing.JTextField StudentID;
    private javax.swing.JLabel Time;
    private javax.swing.JComboBox<String> instructor;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> subject;
    private javax.swing.JLabel times;
    private javax.swing.JComboBox<String> timeselect;
    // End of variables declaration//GEN-END:variables
 
}
